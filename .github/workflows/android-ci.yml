name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Generate Keystores
      run: |
        keytool -genkey -v -keystore debug.keystore -alias androiddebugkey -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug, O=Android, C=US" -storepass android -keypass android
        keytool -genkey -v -keystore release.keystore -alias releasekey -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=LocationSimulator, O=LocationSimulator, C=CN" -storepass release123 -keypass release123

    - name: Get SHA1 fingerprint
      id: get_sha1
      run: |
        echo "=== Debug版本SHA1 ==="
        DEBUG_SHA1=$(keytool -list -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android 2>/dev/null | grep "SHA1:" | cut -d' ' -f3)
        echo "Debug SHA1: $DEBUG_SHA1"

        echo "=== Release版本SHA1 ==="
        RELEASE_SHA1=$(keytool -list -v -keystore release.keystore -alias releasekey -storepass release123 -keypass release123 2>/dev/null | grep "SHA1:" | cut -d' ' -f3)
        echo "Release SHA1: $RELEASE_SHA1"

        echo "=== 百度地图配置信息 ==="
        PACKAGE_NAME="com.example.locationsimulator"
        DEBUG_SECURITY_CODE="$DEBUG_SHA1;$PACKAGE_NAME;Location Simulator Debug"
        RELEASE_SECURITY_CODE="$RELEASE_SHA1;$PACKAGE_NAME;Location Simulator"

        echo "📦 包名: $PACKAGE_NAME"
        echo "🔐 Debug安全码: $DEBUG_SECURITY_CODE"
        echo "🔐 Release安全码: $RELEASE_SECURITY_CODE"
        echo ""
        echo "📋 请将上述安全码配置到百度开发者平台："
        echo "   https://lbsyun.baidu.com/apiconsole/key"

        echo "DEBUG_SHA1=$DEBUG_SHA1" >> $GITHUB_OUTPUT
        echo "RELEASE_SHA1=$RELEASE_SHA1" >> $GITHUB_OUTPUT
        echo "DEBUG_SECURITY_CODE=$DEBUG_SECURITY_CODE" >> $GITHUB_OUTPUT
        echo "RELEASE_SECURITY_CODE=$RELEASE_SECURITY_CODE" >> $GITHUB_OUTPUT

    - name: Build with Gradle
      run: gradle build
      env:
        BAIDU_MAP_AK: ${{ secrets.BAIDU_MAP_AK }}

    - name: Build Debug APK
      run: gradle assembleDebug
      env:
        BAIDU_MAP_AK: ${{ secrets.BAIDU_MAP_AK }}
        BAIDU_MAP_SK: ${{ secrets.BAIDU_MAP_SK }}

    - name: Build Release APK
      run: gradle assembleRelease
      env:
        BAIDU_MAP_AK: ${{ secrets.BAIDU_MAP_AK }}
        BAIDU_MAP_SK: ${{ secrets.BAIDU_MAP_SK }}

    - name: Get version info
      id: version
      run: |
        VERSION_NAME=$(grep "versionName" app/build.gradle | cut -d'"' -f2)
        VERSION_CODE=$(grep "versionCode" app/build.gradle | awk '{print $2}')
        BUILD_TIME=$(date +"%Y%m%d_%H%M%S")
        echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_OUTPUT
        echo "BUILD_TIME=$BUILD_TIME" >> $GITHUB_OUTPUT

    - name: Rename APK files
      run: |
        mkdir -p apk-output
        cp app/build/outputs/apk/debug/app-debug.apk "apk-output/定红_v${{ steps.version.outputs.VERSION_NAME }}_debug_${{ steps.version.outputs.BUILD_TIME }}.apk"
        cp app/build/outputs/apk/release/app-release.apk "apk-output/定红_v${{ steps.version.outputs.VERSION_NAME }}_release_${{ steps.version.outputs.BUILD_TIME }}.apk"

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: 定红_debug_APK
        path: apk-output/*debug*.apk
        retention-days: 30

    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: 定红_release_APK
        path: apk-output/*release*.apk
        retention-days: 30

    - name: Upload All APKs
      uses: actions/upload-artifact@v4
      with:
        name: 定红_所有版本_APK
        path: apk-output/*.apk
        retention-days: 30
